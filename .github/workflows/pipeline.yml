name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build artifact
    steps:
      - name: Set CI environment variable to false
        run: echo "CI=false" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          node-version: '16'

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build --no-warnings

      - name: Creating deployment artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz build
      
      - name: Storing artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz
          retention-days: 1
  prepare-release:
    runs-on: ubuntu-latest
    needs: build
    name: Upload to server
    steps:
      - uses: actions/download-artifact@v2
        name: Downloading artifact
        with:
          name: app-build
      
      - name: Uploading to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: 22
          source: ${{ github.sha }}.tar.gz
          target: /tmp/

      - name: Extracting files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: 22
          script: |
            mkdir -p ${{secrets.PATH_DEPLOY}}/releases/${{ github.sha }}
            tar -xzf /tmp/${{ github.sha }}.tar.gz -C ${{ secrets.PATH_DEPLOY }}/releases/${{ github.sha }}
  set-release:
    runs-on: ubuntu-latest
    needs: prepare-release
    name: Set release
    steps:
      - name: Activating release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: 22
          script: |
            ln -s -n -f ${{secrets.PATH_DEPLOY}}/releases/${{ github.sha }}/build ${{secrets.PATH_DEPLOY}}/current
  clean-up:
    runs-on: ubuntu-latest
    needs: set-release
    name: Clean up
    steps:
      - name: Activating release
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: 22
          script: |
            rm /tmp/*.tar.gz
            cd ${{secrets.PATH_DEPLOY}}/releases && ls -t -1 | tail -n +6 | xargs rm -rf