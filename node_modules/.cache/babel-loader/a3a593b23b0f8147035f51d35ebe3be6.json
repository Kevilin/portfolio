{"ast":null,"code":"import { useState } from \"react\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { nanoid } from \"nanoid\";\nimport app from \"../../../firebase/firebaseConfig\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\";\nconst storage = getStorage(app);\nconst db = getFirestore(app);\nexport const HandleClick = () => {\n  //eslint-disable-next-line\n  const [user, setUser] = useState(nanoid());\n  const [toSubmit, setToSubmit] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [inputs, setInputs] = useState({});\n  const [url_imagem, seturl_imagem] = useState([]);\n\n  //Upload post firebase\n  const firebaseAdd = async () => {\n    try {\n      await addDoc(collection(db, \"posts\"), {\n        inputs\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  //When the form is submit\n  const handleSubmit = e => {\n    handleStorage();\n    const validate = inputs.projeto === \"\" || inputs.url_site === \"\" || inputs.tecnologias === \"\" || inputs.url_github === \"\";\n    e.preventDefault();\n    if (validate) {\n      return alert(\"Revise todos os campos\");\n    }\n    setToSubmit(true);\n    setTimeout(() => {\n      setToSubmit(false);\n      setRedirect(true);\n    }, 3000);\n    firebaseAdd();\n  };\n\n  //Upload images to Firebase\n  const onFileChange = async e => {\n    if (url_imagem.length < 3) {\n      //Read file\n      const file = e.target.files[0];\n      //Upload\n      const fileRef = ref(storage, `documents/${file.name}`);\n      const upload = await uploadBytes(fileRef, file);\n      //Get the url for download\n      const url_imagemAwait = await getDownloadURL(fileRef);\n      seturl_imagem(prevurl_imagem => [...prevurl_imagem, {\n        url_imagem: url_imagemAwait,\n        imageData: upload.ref.name\n      }]);\n    } else {\n      return alert(\"Só é possivel inserir 3 imagens.\");\n    }\n  };\n\n  //Create key for user\n  const handleStorage = () => {\n    window.localStorage.setItem(\"text\", user);\n  };\n\n  //Read and save inputs value on state\n  const handleChange = e => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value,\n      url_imagem,\n      user\n    });\n  };\n  return {\n    handleSubmit,\n    handleChange,\n    onFileChange,\n    firebaseAdd,\n    url_imagem,\n    toSubmit,\n    redirect\n  };\n};","map":{"version":3,"names":["useState","collection","addDoc","nanoid","app","getFirestore","getDownloadURL","getStorage","ref","uploadBytes","storage","db","HandleClick","user","setUser","toSubmit","setToSubmit","redirect","setRedirect","inputs","setInputs","url_imagem","seturl_imagem","firebaseAdd","e","console","error","handleSubmit","handleStorage","validate","projeto","url_site","tecnologias","url_github","preventDefault","alert","setTimeout","onFileChange","length","file","target","files","fileRef","name","upload","url_imagemAwait","prevurl_imagem","imageData","window","localStorage","setItem","handleChange","value"],"sources":["/home/kevilinrodrigues/Documentos/myreps/portfolio-dev/src/pages/Submit/Form/Form.logical.js"],"sourcesContent":["import { useState } from \"react\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { nanoid } from \"nanoid\";\nimport app from \"../../../firebase/firebaseConfig\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getDownloadURL, getStorage, ref, uploadBytes } from \"firebase/storage\";\nconst storage = getStorage(app);\nconst db = getFirestore(app);\n\nexport const HandleClick = () => {\n  //eslint-disable-next-line\n  const [user, setUser] = useState(nanoid());\n  const [toSubmit, setToSubmit] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [inputs, setInputs] = useState({});\n  const [url_imagem, seturl_imagem] = useState([]);\n\n  //Upload post firebase\n  const firebaseAdd = async () => {\n    try {\n      await addDoc(collection(db, \"posts\"), {\n        inputs,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  //When the form is submit\n  const handleSubmit = (e) => {\n    handleStorage();\n    const validate = inputs.projeto === \"\" || inputs.url_site === \"\" || inputs.tecnologias === \"\" || inputs.url_github === \"\";\n    e.preventDefault();\n    if (validate) {\n      return alert(\"Revise todos os campos\");\n    }\n    setToSubmit(true);\n    setTimeout(() => {\n      setToSubmit(false);\n      setRedirect(true);\n    }, 3000);\n    firebaseAdd();\n  };\n\n  //Upload images to Firebase\n  const onFileChange = async (e) => {\n    if (url_imagem.length < 3) {\n      //Read file\n      const file = e.target.files[0];\n      //Upload\n      const fileRef = ref(storage, `documents/${file.name}`);\n      const upload = await uploadBytes(fileRef, file);\n      //Get the url for download\n      const url_imagemAwait = await getDownloadURL(fileRef);\n      seturl_imagem((prevurl_imagem) => [...prevurl_imagem, { url_imagem: url_imagemAwait, imageData: upload.ref.name }]);\n    } else {\n      return alert(\"Só é possivel inserir 3 imagens.\");\n    }\n  };\n\n  //Create key for user\n  const handleStorage = () => {\n    window.localStorage.setItem(\"text\", user);\n  };\n\n  //Read and save inputs value on state\n  const handleChange = (e) => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value,\n      url_imagem,\n      user,\n    });\n  };\n\n  return { handleSubmit, handleChange, onFileChange, firebaseAdd, url_imagem, toSubmit, redirect };\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AACvD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,GAAG,MAAM,kCAAkC;AAClD,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,cAAc,EAAEC,UAAU,EAAEC,GAAG,EAAEC,WAAW,QAAQ,kBAAkB;AAC/E,MAAMC,OAAO,GAAGH,UAAU,CAACH,GAAG,CAAC;AAC/B,MAAMO,EAAE,GAAGN,YAAY,CAACD,GAAG,CAAC;AAE5B,OAAO,MAAMQ,WAAW,GAAGA,CAAA,KAAM;EAC/B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACG,MAAM,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMuB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMrB,MAAM,CAACD,UAAU,CAACU,EAAE,EAAE,OAAO,CAAC,EAAE;QACpCQ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOK,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;IAClB;EACF,CAAC;;EAED;EACA,MAAMG,YAAY,GAAIH,CAAC,IAAK;IAC1BI,aAAa,EAAE;IACf,MAAMC,QAAQ,GAAGV,MAAM,CAACW,OAAO,KAAK,EAAE,IAAIX,MAAM,CAACY,QAAQ,KAAK,EAAE,IAAIZ,MAAM,CAACa,WAAW,KAAK,EAAE,IAAIb,MAAM,CAACc,UAAU,KAAK,EAAE;IACzHT,CAAC,CAACU,cAAc,EAAE;IAClB,IAAIL,QAAQ,EAAE;MACZ,OAAOM,KAAK,CAAC,wBAAwB,CAAC;IACxC;IACAnB,WAAW,CAAC,IAAI,CAAC;IACjBoB,UAAU,CAAC,MAAM;MACfpB,WAAW,CAAC,KAAK,CAAC;MAClBE,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;IACRK,WAAW,EAAE;EACf,CAAC;;EAED;EACA,MAAMc,YAAY,GAAG,MAAOb,CAAC,IAAK;IAChC,IAAIH,UAAU,CAACiB,MAAM,GAAG,CAAC,EAAE;MACzB;MACA,MAAMC,IAAI,GAAGf,CAAC,CAACgB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC9B;MACA,MAAMC,OAAO,GAAGlC,GAAG,CAACE,OAAO,EAAG,aAAY6B,IAAI,CAACI,IAAK,EAAC,CAAC;MACtD,MAAMC,MAAM,GAAG,MAAMnC,WAAW,CAACiC,OAAO,EAAEH,IAAI,CAAC;MAC/C;MACA,MAAMM,eAAe,GAAG,MAAMvC,cAAc,CAACoC,OAAO,CAAC;MACrDpB,aAAa,CAAEwB,cAAc,IAAK,CAAC,GAAGA,cAAc,EAAE;QAAEzB,UAAU,EAAEwB,eAAe;QAAEE,SAAS,EAAEH,MAAM,CAACpC,GAAG,CAACmC;MAAK,CAAC,CAAC,CAAC;IACrH,CAAC,MAAM;MACL,OAAOR,KAAK,CAAC,kCAAkC,CAAC;IAClD;EACF,CAAC;;EAED;EACA,MAAMP,aAAa,GAAGA,CAAA,KAAM;IAC1BoB,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAErC,IAAI,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMsC,YAAY,GAAI3B,CAAC,IAAK;IAC1BJ,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,CAACK,CAAC,CAACgB,MAAM,CAACG,IAAI,GAAGnB,CAAC,CAACgB,MAAM,CAACY,KAAK;MAC/B/B,UAAU;MACVR;IACF,CAAC,CAAC;EACJ,CAAC;EAED,OAAO;IAAEc,YAAY;IAAEwB,YAAY;IAAEd,YAAY;IAAEd,WAAW;IAAEF,UAAU;IAAEN,QAAQ;IAAEE;EAAS,CAAC;AAClG,CAAC"},"metadata":{},"sourceType":"module"}